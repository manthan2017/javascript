{
  "users": [
      {
        "snippet1": "<div>package Chat;</div><div><br></div><div>import java.io.BufferedInputStream;</div><div>import java.io.BufferedOutputStream;</div><div>import java.io.DataInputStream;</div><div>import java.io.DataOutputStream;</div><div>import java.io.File;</div><div>import java.io.FileInputStream;</div><div>import java.io.FileOutputStream;</div><div>import java.io.FileWriter;</div><div>import java.io.IOException;</div><div>import java.io.PrintWriter;</div><div>import java.net.ServerSocket;</div><div>import java.net.Socket;</div><div>import java.util.Date;</div><div>import java.util.Scanner;</div><div><br></div><div>public class MyServer<span class=\"red\" <span=\"\">{</span></div><div<span class=\"red\" <span=\"\"><br><div><span style=\"white-space:pre\">\t</span>public static void main(String[] args) throws IOException<span class=\"red\" <span=\"\">{</span></div><div><br></div><div><span style=\"white-space:pre\">\t\t</span>ServerSocket serverSocket = null;</div><div><span style=\"white-space:pre\">\t\t</span>int clientNum = 0;</div><div><span style=\"white-space:pre\">\t\t</span>Thread[] threadArray = new Thread[100];</div><div><span style=\"white-space:pre\">\t\t</span>ClientHandler[] clients = new ClientHandler[100];</div><div><span style=\"white-space:pre\">\t\t</span>numberCounter counter = new numberCounter();</div><div><br></div><div><span style=\"white-space:pre\">\t\t</span>// 1. CREATE A NEW SERVERSOCKET</div><div><span style=\"white-space:pre\">\t\t</span>try<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t</span>serverSocket = new ServerSocket(4444);</div><div><span style=\"white-space:pre\">\t\t\t</span>System.out.println(serverSocket);</div><div><span style=\"white-space:pre\">\t<span class=\"red\" <span=\"\">}</span></span> catch (IOException e)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t</span>System.out.println(\"Could not listen on port: 4444\");</div><div><span style=\"white-space:pre\">\t\t\t</span>System.exit(-1);</div><div><span style=\"white-space:pre\">\t<span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t\t</span>File file = new File(\"chat.txt\");</div><div><span style=\"white-space:pre\">\t\t</span>PrintWriter outFile = new PrintWriter(new FileWriter(file, false));</div><div><span style=\"white-space:pre\">\t\t</span>while (true)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t</span>Socket clientSocket = null;</div><div><span style=\"white-space:pre\">\t\t\t</span>try<span class=\"red\" <span=\"\">{</span></div><div><br></div><div><span style=\"white-space:pre\">\t\t\t\t</span>clientSocket = serverSocket.accept();</div><div><span style=\"white-space:pre\">\t\t\t\t</span>ClientHandler client = new ClientHandler(clientSocket, clientNum, clients,</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>new PrintWriter(new BufferedOutputStream(clientSocket.getOutputStream())), outFile, counter);</div><div><span style=\"white-space:pre\">\t\t\t\t</span>Thread t = new Thread(client);</div><div><span style=\"white-space:pre\">\t\t\t\t</span>t.start();</div><div><span style=\"white-space:pre\">\t\t\t\t</span>threadArray[clientNum] = t;</div><div><span style=\"white-space:pre\">\t\t\t\t</span>clients[clientNum] = client;</div><div><span style=\"white-space:pre\">\t\t\t\t</span>clientNum++;</div><div><span style=\"white-space:pre\">\t\t\t\t</span>for (int i = 0; i &lt; clientNum; i++)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t</span>clients[i].updateArray(clients);</div><div><span style=\"white-space:pre\">\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t\t<span class=\"red\" <span=\"\">}</span></span> catch (IOException e)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t</span>System.out.println(\"Accept failed: 4444\");</div><div><span style=\"white-space:pre\">\t\t\t\t</span>System.exit(-1);</div><div><span style=\"white-space:pre\">\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div<span class=\"red\" <span=\"\">}<div><br></div><div>class ClientHandler implements Runnable<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t</span>Socket s;</div><div><span style=\"white-space:pre\">\t</span>int num;</div><div><span style=\"white-space:pre\">\t</span>ClientHandler[] clients;</div><div><span style=\"white-space:pre\">\t</span>String clientName;</div><div><span style=\"white-space:pre\">\t</span>PrintWriter out;</div><div><span style=\"white-space:pre\">\t</span>PrintWriter outFile;</div><div><span style=\"white-space:pre\">\t</span>numberCounter counter;</div><div><br></div><div><span style=\"white-space:pre\">\t</span>ClientHandler(Socket s, int n, ClientHandler[] array, PrintWriter out, PrintWriter outFile, numberCounter count)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>this.s = s;</div><div><span style=\"white-space:pre\">\t\t</span>num = n;</div><div><span style=\"white-space:pre\">\t\t</span>clients = array;</div><div><span style=\"white-space:pre\">\t\t</span>this.out = out;</div><div><span style=\"white-space:pre\">\t\t</span>this.outFile = outFile;</div><div><span style=\"white-space:pre\">\t\t</span>counter = count;</div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t</span>public synchronized void run()<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>Scanner in;</div><div><br></div><div><span style=\"white-space:pre\">\t\t</span>try<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t</span>in = new Scanner(new BufferedInputStream(s.getInputStream()));</div><div><span style=\"white-space:pre\">\t\t\t</span>clientName = in.next();</div><div><br></div><div><span style=\"white-space:pre\">\t\t\t</span>System.out.println(\"New user has connected! Welcome \" + clientName + \"!\");</div><div><span style=\"white-space:pre\">\t\t\t</span>in.nextLine();</div><div><span style=\"white-space:pre\">\t\t\t</span>outFile.println(\"New user has connected! Welcome \" + clientName + \"!\");</div><div><span style=\"white-space:pre\">\t\t\t</span>outFile.flush();</div><div><br></div><div><span style=\"white-space:pre\">\t\t\t</span>while (true)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t</span>if (in.hasNextLine())<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t</span>String code = in.next();</div><div><span style=\"white-space:pre\">\t\t\t\t\t</span>if (code.equals(\"txt\"))<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>String clientMessage = in.nextLine();</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>System.out.println(clientMessage);</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>outFile.println(counter.getCounter() + \".\" + clientMessage);</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>outFile.flush();</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>counter.inc();</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>for (int i = 0; i &lt; clients.length; i++)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t</span>if ((clients[i] != null) &amp;&amp; (i != num))<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t</span>clients[i].getMessage(clientMessage);</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t\t\t<span class=\"red\" <span=\"\">}</span></span> else if (code.equals(\"img\"))<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>String imgName = in.next();</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>System.out.println(imgName + \"_\" + clientName + \"_\" + (new Date().getTime()));</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>outFile.println(counter.getCounter() + \".\" + imgName + \"_\" + clientName + \"_\" + (new Date().getTime()));</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>outFile.flush();</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>counter.inc();</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>DataInputStream dis = new DataInputStream(s.getInputStream());</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>FileOutputStream fout = new FileOutputStream(\"/image/\" + imgName+ \"_\" + clientName + \"_\" + (new Date().getTime()));</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>int i;</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>while ((i = dis.read()) &gt; -1<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t</span>fout.write(i);</div><div><span style=\"white-space:pre\">\t\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span>for (int i = 0; i &lt; clients.length; i++)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t</span>if ((clients[i] != null) &amp;&amp; (i != num))<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t</span>clients[i].getMessage(imgName + \"_\" + clientName + (new Date().getTime()));</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t</span>FileInputStream fis = new FileInputStream(imgName);</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t</span>DataOutputStream os = new DataOutputStream(s.getOutputStream());</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t</span>while ((i = fis.read()) &gt; -1<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t\t\t</span>os.write(i);</div><div><span style=\"white-space:pre\">\t\t\t\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t\t\t</span></div><div><span style=\"white-space:pre\">\t\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\">\t<span class=\"red\" <span=\"\">}</span></span> catch (IOException e)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t\t</span>e.printStackTrace();</div><div><span style=\"white-space:pre\">\t<span class=\"red\" <span=\"\">}</span></span></div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t</span>void getMessage(String message)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>out.println(message);</div><div><span style=\"white-space:pre\">\t\t</span>out.flush();</div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t</span>void updateArray(ClientHandler[] array)<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>clients = array;</div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div<span class=\"red\" <span=\"\">}<div><br></div><div>class numberCounter<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t</span>int counter;</div><div><br></div><div><span style=\"white-space:pre\">\t</span>numberCounter()<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>counter = 1;</div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t</span>void inc()<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>counter++;</div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div><span style=\"white-space:pre\">\t</span>int getCounter()<span class=\"red\" <span=\"\">{</span></div><div><span style=\"white-space:pre\">\t\t</span>return counter;</div><div><span style=\"white-space:pre\"><span class=\"red\" <span=\"\">}</span></span></div><div><br></div><div<span class=\"red\" <span=\"\">}<div><br></div><div></div></div<span></div<span></div<span></div<span>",
        "snippet1_preview": "<div>package Chat;</div><div><br></div><div>import java.io.BufferedInputStream;</div><div>import jav",
        "snippet1_name": "SOMENAME1",
        "snippet_number": 3,
        "id": "user1",
        "snippet2": "SOMECODE2sdfdsf",
        "snippet2_preview": "SOMECODE2sdfdsf",
        "snippet2_name": "SOMENAME2",
        "snippet0": "1234somecode? {} { } function let<div>code = function(){</div><div>somecode</div><div>}</div>",
        "snippet0_preview": "1234somecode? {} { } function let<div>code = function(){</div><div>somecode</div><div>}</div>",
        "snippet0_name": "SOMENAME0",
        "snippetundefined_preview": "Choose a snippet from the left",
        "snippetundefined": "Choose a snippet from the left"
      }
  ]
}